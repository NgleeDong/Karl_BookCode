public class Lc779_kthGrammar {

    /*
    779. 第K个语法符号
     */

    /**
     * 思路：
     * 可以根据题目要求画出前几行，可以生成一个满二叉树
     *      0
     *    0  1
     *   0  1 1 0
     *  0 1 1 0 1 0 0 1
     *
     *  可以看出，某个位置是0还是1，取决于：
     *  （1）它的父亲是0还是1
     *  （2）它自己是左还是右：是左，就与父亲相同；是右，就与父亲相反
     *   ==> 我们判断某个位置，要先求它的父亲，然后根据位置判断是否取反即可
     */

    public int kthGrammar(int n, int k) {
        if (n == 1) {
            return 0;
        }
        int parent = kthGrammar(n - 1, (k + 1) >> 1); //(k + 1) >> 1也可以写成 (k + 1) / 2
        return (k & 1) == 1 ? parent : 1 - parent; //(k & 1) == 1说明是奇数，奇数是左子树，值应与父亲相同
    }
}
